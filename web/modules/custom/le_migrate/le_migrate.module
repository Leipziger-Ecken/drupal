<?php

use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;
use Drupal\user\Entity\User;

require_once('slug_helper.php');

/**
 * Implements hook_install
 */
function le_migrate_install ()
{
    // Let's play a game... infinite server timeout or you will die... decide in 3,2,1,...
    le_migrate_users();
    le_migrate_bezirke();
    le_migrate_akteure();
    le_migrate_events();
}

function le_migrate_akteure ()
{

      $directory = 'public://le/';
      file_prepare_directory($directory, FILE_CREATE_DIRECTORY);

      $database = \Drupal::database();

      $query = $database->query("
        SELECT * FROM aae_data_akteur as ak
        JOIN aae_data_akteur_hat_user as ahu
        JOIN aae_data_adresse as ad
        JOIN aae_data_bezirke as be
        WHERE ahu.hat_AID = ak.AID
          AND ad.ADID = ak.adresse
          AND be.BID = ad.bezirk");

      $result = $query->fetchAll();

      $c = 0;

      foreach ($result as $akteur) {

        $created = time();

        if (!empty($akteur->created)) {
          $created = new DateTime($akteur->created);
          $created = $created->getTimestamp();
        }

        $slug = slugify($akteur->name) . ($akteur->plz ? '-' . $akteur->plz : '');

        $valid_url = filter_var($akteur->url, FILTER_VALIDATE_URL);
        $image_name = basename($akteur->bild);
        $file = null;

        if (!empty(trim($akteur->bild))) {
          $image = file_get_contents("https://leipziger-ecken.de{$akteur->bild}");
          $file = file_save_data($image, $directory . $image_name, FILE_EXISTS_REPLACE);
        }

        $node = array(
            'nid' => $akteur->AID,
            'type' => 'le_akteur',
            'title' => $akteur->name,
            'field_le_akteur_email' => $akteur->email,
            'field_le_akteur_phone' => $akteur->telefon,
            'field_le_akteur_url' => $valid_url ? $akteur->url : null,
            'field_le_akteur_description' => [
              'value' => $akteur->beschreibung,
              'format' => 'full_html',
            ],
            'field_le_akteur_contactperson' => $akteur->ansprechpartner,
            'field_le_akteur_contactperson_fn' => $akteur->funktion,
            'field_le_akteur_opening_times' => $akteur->oeffnungszeiten,
            'field_le_akteur_barrier_free' => $akteur->barrierefrei === 1,
            'field_le_akteur_adresse' => [
              'country_code' => 'DE',
              'address_line1' => $akteur->strasse . (!empty($akteur->nr) ? ' ' . $akteur->nr : ''),
              'address_line2' => $akteur->adresszusatz,
              'postal_code' => $akteur->plz,
              'locality' => 'Leipzig'
            ],
            'field_le_akteur_bezirk' => $akteur->BID,
            'path' => [
              'alias' => '/akteure/' . $slug,
             // 'pathauto' => PathautoState::SKIP,
            ],
            'created' => $created,
            'uid' => (int) $akteur->hat_UID // || $akteur->ersteller???
          );

          if ($file) {
            $node['field_le_akteur_image'] = [
                'target_id' => $file->id(),
                'alt' => "Profilfoto Akteur ´{$akteur->name}´",
                'title' => "Profilfoto Akteur ´{$akteur->name}´"
            ];
          }

          $node = Node::create($node);
          $node->save();

          $c++;
    }

    drupal_set_message(t("Successfully imported ${c} Akteure"));
}

function le_migrate_bezirke ()
{

      $database = \Drupal::database();
      $query = $database->query("SELECT * FROM aae_data_bezirke");
      $result = $query->fetchAll();

      $c = 0;

      foreach ($result as $bezirk) {

        $slug = slugify($bezirk->bezirksname);

        $term = Term::create(array(
          'tid' => $bezirk->BID,
          'parent' => array(),
          'name' => $bezirk->bezirksname,
          'vid' => 'le_bezirk',
          'path' => [
            'alias' => '/bezirke/' . $slug
          ]
        ))->save();

        $c++;
     }

     drupal_set_message(t("Successfully imported ${c} bezirke"));
}

function le_migrate_events ()
{

      $today = date("Y-m-d H:i:s");
      $directory = 'public://le/';
      file_prepare_directory($directory, FILE_CREATE_DIRECTORY);

      $database = \Drupal::database();

      // @todo Not yet concrete enough:
      $query = $database->query("
        SELECT * FROM aae_data_event as ev
        JOIN aae_data_adresse as ad
        JOIN aae_data_bezirke as be
        JOIN aae_data_akteur_hat_event as ahe
        WHERE ad.ADID = ev.ort
          AND be.BID = ad.bezirk
          AND ahe.EID = ev.EID
          AND ev.start_ts >= '${today}'
          AND ev.parent_EID IS NULL");

      $result = $query->fetchAll();

      $c = 0;

      foreach ($result as $event) {

        $created = time();

        if (!empty($event->created)) {
          $created = new DateTime($event->created);
          $created = $created->getTimestamp();
        }

        $slug = slugify($event->name) . ($event->plz ? '-' . $event->plz : '');

        $valid_url = filter_var($event->url, FILTER_VALIDATE_URL);
        $image_name = basename($event->bild);
        $file = null;

        if (!empty(trim($event->bild))) {
          // \Drupal::logger('le_migrate')->notice("https://leipziger-ecken.de{$akteur->bild}");
          $image = file_get_contents("https://leipziger-ecken.de{$event->bild}");
          $file = file_save_data($image, $directory . $image_name, FILE_EXISTS_REPLACE);
        }

        $frequency = 0;

        switch ($event->recurring_event_type) {
          case 2:
            $frequency = 'WEEKLY';
          break;
          case 3:
            $frequency = 'WEEKLY;INTERVAL=2';
            break;
          case 4:
            $frequency = 'MONTHLY';
            break;
          case 5:
            $frequency = 'MONTHLY;INTERVAL=2';
            break;
        }

        $start = str_replace(' ', 'T', $event->start_ts);
        $ende = $event->ende_ts === '1000-01-01 00:00:00' ? $start : str_replace(' ', ' ', $event->ende_ts);

        $node = array(
            'field_le_event___eid' => $event->EID,
            'type' => 'le_event',
            'title' => $event->name,
            'field_le_event_beschreibung' => [
              'value' => $event->kurzbeschreibung,
              'format' => 'full_html',
            ],
            'field_le_event_aid' => $event->AID,
            'field_le_event_adresse' => [
              'country_code' => 'DE',
              'address_line1' => $event->strasse . (!empty($event->nr) ? ' ' . $event->nr : ''),
              'address_line2' => $event->adresszusatz,
              'postal_code' => $event->plz,
              'locality' => 'Leipzig'
            ],
            'field_le_event_bezirk' => $event->BID,
            'field_le_event_occurrences' => [
              'value' => $start,
              'end_value' => $ende,
              'timezone' => 'Europe/Berlin',
              'rrule' => $frequency ? "RRULE:FREQ=${frequency}" : null,
              'infinite' => $frequency ? 1 : 0
            ],
            'path' => [
              'alias' => '/events/' . $slug,
             // 'pathauto' => PathautoState::SKIP,
            ],
            'created' => $created,
            'uid' => (int) $event->ersteller
          );

          if ($file) {
            $node['field_le_event_image'] = [
                'target_id' => $file->id(),
                'alt' => "Bild Event ´{$event->name}´",
                'title' => "Bild Event ´{$event->name}´"
            ];
          }

          $node = Node::create($node);

          $node->save();

          $c++;
    }

    drupal_set_message(t("Successfully imported ${c} events"));
}

/**
 * @thanks https://drupal.stackexchange.com/questions/209163/how-do-i-migrate-users-passwords
 * (But could have used default Migration Manager as well, just a question of code consistency...
 *  @see https://www.drupal.org/project/drupal/issues/2764287)
 *
 * Roles aae_data: 3 => Administrator; 4 => Redakteur; 5 => Akteur; 6 => Festival
 */
function le_migrate_users ()
{

        $database = \Drupal::database();
        $query = $database->query("
          SELECT * FROM aae_data_users as us
          WHERE us.uid != 1
            AND us.status = 1");
        $users = $query->fetchAll();

        $query = $database->query("SELECT * FROM aae_data_users_roles");
        $roles = $query->fetchAll();

        $c = 0;

        foreach ($users as $user) {

          $newuser = User::create([
              'name' => $user->name,
              'pass' => $user->pass,
              'mail' => $user->mail,
              'status' => $user->status,
              'init' => $user->init,
              'created' => $user->created,
              'login' => $user->login,
              'access' => $user->access,
              'uid' => $user->uid,
          ]);

          $newuser->save();

          // dirty overwrite re-hashed hash
          $database->merge('users_field_data')
            ->fields(['pass' => $user->pass])
            ->keys(array('uid' => $user->uid))
            ->execute();

          $c++;
      }

      // Assign roles
      foreach ($roles as $role) {

        $user = User::load($role->uid);

        if (!empty($user)) {
          if ($role->rid === '4') {
             $user->addRole('le_role_redakteur');
             $user->save();
          }
        }
      }

      drupal_set_message(t("Successfully imported ${c} users"));
}
