<?php

/**
 * @file
 * Custom implementation.
 */

use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Render\PlainTextOutput;

/**
 * Implements hook_help().
 */
function usernotification_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.usernotification':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Send user notification module, allows administrator to send notification message to website users about any information, coupons, vouchers, or any type of activities to their mails.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Send notification from people page') . '</dt>';
      $output .= '<dd>' . t('Through the <a href=":people">People administration page</a> you can select number of users or a perticular user and send them a notification to thier mails. This module provides the action in the Actions drop-down by selecting the action and users a notification is send.', [':people' => Url::fromRoute('entity.user.collection')->toString()]) . '</dd>';
      $output .= '<dt>' . t('Configuring user Notification') . '</dt>';
      $output .= '<dd>' . t('This module provide the configuration page to site administator to configure the notification message in the backend. This module also uses the tokens to easily configure the notification message. <a href=":notification">Notification administration page</a>.', [':notification' => Url::fromRoute('usernotification.notification_settings')->toString()]) . '</dd>';

      return $output;
  }
}

/**
 * Implements hook_mail().
 */
function usernotification_mail($key, &$message, $params) {
  $token_service = \Drupal::token();
  $variables = ['user' => $params['account']];
  if (isset($params['headers'])) {
    $message['headers'] = array_merge($message['headers'], $params['headers']);
  }
  $langcode = $message['langcode'];
  $mail_config = \Drupal::config('usernotification.settings');
  $message_body = $mail_config->get('message');
  $message['from'] = $params['from'];
  $token_options = [
    'langcode' => $langcode,
    'callback' => 'user_mail_tokens',
    'clear' => TRUE,
  ];
  $message['subject'] = PlainTextOutput::renderFromHtml($token_service->replace($mail_config->get('subject'), $variables, $token_options));
  $message['body'][] = $token_service->replace($message_body['value'], $variables, $token_options);
}
