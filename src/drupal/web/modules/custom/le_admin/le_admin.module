<?php
use \Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\block\Entity\Block;

function le_admin_theme($existing, $type, $theme, $path)
{
  return [
    'le_admin__user_dashboard' => [
      'variables' => [],
      'render element' => 'elements',
    ],
    'le_admin__user_akteur_contents' => [
      'variables' => ['node' => null],
      'render element' => 'elements',
    ],
    'le_admin__user_akteur_webbuilder' => [
      'variables' => ['node' => null],
      'render element' => 'elements',
    ],
    'node__le_akteur__backend_teaser' => [
      'template' => 'node/node--le-akteur--backend-teaser',
      'base hook' => 'node',
    ],
    'node__le_event__backend_teaser' => [
      'template' => 'node/node--le-event--backend-teaser',
      'base hook' => 'node',
    ],
    'node__project__backend_teaser' => [
      'template' => 'node/node--project--backend-teaser',
      'base hook' => 'node',
    ],
    'node__blog_article__backend_teaser' => [
      'template' => 'node/node--blog-article--backend-teaser',
      'base hook' => 'node',
    ],
    'node__partner__backend_teaser' => [
      'template' => 'node/node--partner--backend-teaser',
      'base hook' => 'node',
    ],
    'node__sponsor__backend_teaser' => [
      'template' => 'node/node--sponsor--backend-teaser',
      'base hook' => 'node',
    ],
    'node__webbuilder__backend_teaser' => [
      'template' => 'node/node--webbuilder--backend-teaser',
      'base hook' => 'node',
    ],
    'views_view__le_akteur_has_events__dashboard' => [
      'template' => 'views/views-view--le-akteur-has-events--dashboard',
      'base hook' => 'views_view',
    ],
    'views_view__projects__dashboard' => [
      'template' => 'views/views-view--projects--dashboard',
      'base hook' => 'views_view',
    ],
    'views_view__blog_articles__dashboard' => [
      'template' => 'views/views-view--blog-articles--dashboard',
      'base hook' => 'views_view',
    ],
    'views_view__sponsors__dashboard' => [
      'template' => 'views/views-view--sponsors--dashboard',
      'base hook' => 'views_view',
    ],
    'views_view__partners__dashboard' => [
      'template' => 'views/views-view--partners--dashboard',
      'base hook' => 'views_view',
    ],
    'views_view__webbuilders__dashboard' => [
      'template' => 'views/views-view--webbuilders--dashboard',
      'base hook' => 'views_view',
    ],
  ];
}

function le_admin_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  if (strpos($form_id, 'node_') === 0) {
    _le_admin_node_form_alter($form, $form_state, $form_id);
  }

  if (in_array($form_id, [
    'node_le_akteur_edit_form',
    'node_le_akteur_form',
  ])) {
    $form['#attached']['library'][] = 'le_admin/akteur_form';
  }
  if ($form_id === 'user_login_form') {
    $form['#submit'][] = 'le_admin_user_login_form_submit';
  }
  if (in_array($form_id, [
    'node_le_event_form',
    'node_le_event_edit_form',
    'node_blog_article_form',
    'node_blog_article_edit_form',
    'node_project_form',
    'node_project_edit_form',
    'node_partner_form',
    'node_sponsor_form',
    'node_sponsor_edit_form',
    'node_webbuilder_form',
    'node_webbuilder_edit_form',
  ])) {
    _le_admin_og_audience_form_alter($form, $form_state, $form_id);
  }
}

function le_admin_user_login_form_submit(&$form, FormStateInterface $form_state)
{
  // Check if a destination was set, probably on an exception controller.
  // @see \Drupal\user\Form\UserLoginForm::submitForm()
  $request = \Drupal::service('request_stack')->getCurrentRequest();
  if ($request->request->has('destination')) {
    $request->query->set('destination', $request->request->get('destination'));
  }
  else {
    $form_state->setRedirect('le_admin.user_dashboard');
  }
}

function _le_admin_event_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  if ($form_id === 'node_le_event_form') {
    _le_admin_og_audience_form_alter($form, $form_state);
  }
}

function _le_admin_og_audience_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  if (strpos($form_id, 'edit_form') === false) {
    $akteur_id = \Drupal::request()->query->get('le_akteur');
    if (!$akteur_id) {
      return;
    }

    $form['og_audience']['widget']['#default_value'] = $akteur_id;
  }

  $form['og_audience']['#attributes']['class'][] = 'hidden';
}

function _le_admin_node_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  // add back action
  // TODO: for some reason the link is not shown
  $form['actions']['back'] = [
    '#type' => 'link',
    '#title' => t('Back'),
    '#url' => 'javascript:history.back()',
    '#access' => true,
    '#attributes' => [
      'class' => ['button', 'button--default'],
    ],
    '#button_type' => 'default',
    '#weight' => -10,
  ];
}

/**
 * Implements hook_block_access
 *
 */
function le_admin_block_access(Block $block, $operation, AccountInterface $account) {
  // hide primary and secondary tasks for non-admin users
  if (
    $operation !== 'view' ||
    !in_array($block->id(), [
      'gin_primary_local_tasks',
      'gin_secondary_local_tasks',
    ])
  ) {
    return AccessResult::neutral();
  }

  $user = \Drupal::currentUser();
  $roles = $user->getRoles();
  $allowed_roles = [
    'administrator',' le_role_redakteur',
  ];

  foreach($allowed_roles as $allowed_role) {
    if (in_array($allowed_role, $roles)) {
      return AccessResult::neutral();
    }
  }

  return AccessResult::forbiddenIf(true)->addCacheableDependency($block);
}

function le_admin_preprocess_page(&$variables)
{
  // hide secondary toolbar
  unset($variables['page']['gin_secondary_toolbar']);
}
