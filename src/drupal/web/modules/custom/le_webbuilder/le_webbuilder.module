<?php

use Drupal\path_alias\Entity\PathAlias;
use \Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Html;
use Drupal\views\Views;

function le_webbuilder_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  if ($form_id == 'node_webbuilder_page_form') {
    $webbuilder_id = \Drupal::request()->query->get('webbuilder');
    if ($webbuilder_id) {
      $webbuilder = \Drupal::entityManager()->getStorage('node')->load($webbuilder_id);
      if ($webbuilder) {
        $akteur_id = $webbuilder->og_audience[0]->target_id;
        $form['og_audience']['#attributes']['class'][] = 'hidden';
        $form['og_audience']['widget']['#default_value'] = $akteur_id;
        $form['field_webbuilder']['#attributes']['class'][] = 'hidden';
        $form['field_webbuilder']['widget']['#default_value'] = $webbuilder_id;
      }
    }
  }

  if ($form_id === 'node_webbuilder_page_edit_form') {
    $webbuilder_id = $form['field_webbuilder']['widget']['#default_value'][0];
    if ($webbuilder_id) {
      // dd($form['field_parent']['widget']);
      $form['field_parent']['widget']['#selection_settings']['view']['arguments'][0] = $webbuilder_id;

      // load the page tree
      $view = Views::getView('webbuilder_pages');
      $view->setDisplay('entity_reference_page_tree');
      $view->setArguments([$webbuilder_id]);
      $result = $view->render();
      foreach($result as $nid => $row) {
        if ($row['#row']->_entity) {
          $title = $row['#row']->_entity->title[0]->value;
          $_row = $row;

          while($_row !== null) {
            if (isset($_row['#row']->_entity->field_parent[0])) {
              $parent_id = $_row['#row']->_entity->field_parent[0]->target_id;
              $title = '- ' . $title;
              $_row = $result[$parent_id];
            } else {
              $_row = null;
            }
          }
          $form['field_parent']['widget']['#options'][$nid] = $title;
        }
      }
    }
  }

  if ($form_id === 'node_webbuilder_edit_form') {
    $node_id = $form_state->getFormObject()->getEntity()->id();

    $form['group_pages']['field_page_tree'] = [
      '#type' => 'inline_template',
      '#template' => '<label class="form-item__label">Seitenbaum</label> {{ drupal_view(\'webbuilder_pages\', \'form_page_tree\', ' . $node_id . ')}}',
      '#weight' => 100,
    ];
    $dest = \Drupal::destination()->getAsArray()['destination'];
    $form['group_pages']['field_add_page'] = [
      '#type' => 'markup',
      '#markup' => '<a class="button button--default" href="/node/add/webbuilder_page?webbuilder=' . $node_id . '&destination=' . urlencode($dest) . '">+ ' . t('Add page') . '</a>',
      '#weight' => 101,
    ];
  }

  if (in_array($form_id, ['media_unsplash_image_add_form', 'media_unsplash_image_edit_form'])) {
    $form['search'] = [
      '#type' => 'search',
      '#title' => t('Search images'),
      '#placeholder' => t('Enter search terms'),
      '#attributes' => [
        'data-results-target' => '#edit-field-unsplash-search-results',
        'data-url-target' => '#edit-field-media-remote-image-0-uri',
        'data-alt-target' => '#edit-field-media-remote-image-0-alt',
        'data-title-target' => '#edit-name-0-value',
        'data-attribution-target' => '#edit-field-attribution-0-value',
        'data-api-url' => '/webbuilder/unsplash-api-proxy',
        'oninput' => 'handleUnsplashSearchInput(this)',
        'autocomplete' => 'off',
      ],
      '#weight' => -100,
    ];
    $form['search_results'] = [
      '#type' => 'markup',
      '#markup' => '<div class="unsplash-results" id="edit-field-unsplash-search-results"></div>',
      '#weight' => -99,
    ];
    $form['image_preview'] = [
      '#type' => 'markup',
      '#markup' => '<figure class="unsplash-preview" id="edit-field-image-preview" data-url-source="#edit-field-media-remote-image-0-uri" data-alt-source="#edit-field-media-remote-image-0-alt"></figure>',
      '#weight' => -98,
    ];

    // hide attribution field, so user cannot enter values
    // $form['field_attribution']['#attributes']['class'][] = 'hidden';

    $form['#attached']['library'][] = 'le_webbuilder/unsplash_media_form';
  }
}

/**
 * Provide smooth URI's for system-paths
 */
function le_webbuilder_path_alias()
{
    PathAlias::create([
      'path' => '/node/add/webbuilder',
      'alias' => '/webbuilders/neu',
    ])->save();

    PathAlias::create([
      'path' => '/node/add/project',
      'alias' => '/projects/neu',
    ])->save();

    PathAlias::create([
      'path' => '/node/add/sponsor',
      'alias' => '/sponsors/neu',
    ])->save();

    PathAlias::create([
      'path' => '/node/add/partner',
      'alias' => '/partners/neu',
    ])->save();

    PathAlias::create([
      'path' => '/node/add/blog_article',
      'alias' => '/blog-articles/neu',
    ])->save();
}
