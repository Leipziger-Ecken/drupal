{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set image = content.field_image[0] %}
{% set image_alignment = content.field_image_alignment[0]['#markup'] %}
{% block paragraph %}
<section class="bg-white overflow-hidden">
  <div class="relative max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:px-8">
    {% if content.field_pre_heading[0] or content.field_heading[0] %}
    <div class="mx-auto text-base max-w-prose lg:max-w-none">
      {% if content.field_pre_heading[0] %}
      <h2 class="text-base text-primary-600 font-semibold tracking-wide uppercase">
        {{ content.field_pre_heading[0] }}
      </h2>
      {% endif %}
      {% if content.field_heading[0] %}
      <h3 class="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl">
        {{ content.field_heading[0] }}
      </h3>
      {% endif %}
    </div>
    {% endif %}
    <div class="mt-8 lg:grid lg:grid-cols-2 lg:gap-8">
      <div class="relative lg:row-start-1 {{ image_alignment == 'right' ? 'lg:col-start-2' : 'lg:col-start-1' }}">
        <div class="relative text-base mx-auto max-w-prose lg:max-w-none">
          {% if image %}
          <figure>
            <div class="aspect-w-12 aspect-h-7 lg:aspect-none">
              {{ include('@leipzigerEckenWebbuilder/partials/components/media_image.html.twig', {
                image: image,
                class:'rounded-lg shadow-lg object-cover object-center',
                image_style: 'webbuilder_text_image',
                width: 1184,
              }) }}
            </div>

            {# Unsplash images always require attribution #}
            {% if image['#media'].field_attribution or content.field_image_caption[0] %}
            <figcaption class="mt-3 prose">
              {# TODO: find a way to correctly render attribution field #}
              {{ image['#media'].field_attribution[0].value|raw }}
              {{ content.field_image_caption }}
            </figcaption>
            {% endif %}
          </figure>
          {% endif %}
        </div>
      </div>
      <div class="mt-8 lg:mt-0">
        <div class="prose prose-primary text-gray-500 mx-auto lg:max-w-none lg:row-start-1 lg:col-start-1">
          {{ content.field_body }}
        </div>
      </div>
    </div>
  </div>
</section>
{% endblock paragraph %}
