{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set node_type = node.type[0].target_id %}
{% set image = content.field_main_image[0] %}
<article>
  {% if image %}
  <figure class="relative mx-auto w-full lg:max-w-md mb-8">
    <a href="{{ url }}" class="relative block w-full rounded-lg shadow-lg bg-white overflow-hidden focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
      <span class="sr-only">{{ '' }}</span>
      {{ include('@leipzigerEckenWebbuilder/partials/components/media_image.html.twig', {
        class: 'w-full h-48 sm:h-64 object-cover',
        image: image,
        width: 610,
        image_style: 'webbuilder_teaser',
      }) }}
    </a>
    {# Unsplash images always require attribution #}
    {% if image['#media'].field_attribution %}
    <figcaption class="mt-4 prose">
      {# TODO: find a way to correctly render attribution field #}
      {{ image['#media'].field_attribution[0].value|raw }}
    </figcaption>
    {% endif %}
  </figure>
  {% endif %}
  <div>
    {{ include('@leipzigerEckenWebbuilder/partials/components/badge.html.twig', {
      type: 'primary',
      label: node_type == 'le_event' ? content.field_le_event_occurrences,
    }) }}
  </div>
  <a href="{{ url }}" class="block mt-4">
    <h2 class="text-xl font-semibold text-gray-900">
      {{ label }}
    </h2>
    <div class="mt-3 text-base text-gray-500 prose">
      {% if node_type == 'le_event' %}
      {{ content.field_le_event_beschreibung }}
      {% else %}

      {% endif %}
    </div>
  </a>
  <div class="mt-6">
    <a href="{{ url }}" class="text-sm text-gray-500 hover:underline">
      Mehr erfahren&thinsp;â€¦
    </a>
  </div>
</article>
